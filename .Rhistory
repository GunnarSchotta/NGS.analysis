runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
head(dds)
head(des)
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/ChIP-seq.repeat.analysis.py/NGS.shiny.app.R')
library(nycflights13)
install.packages("nycflights13")
nycflights13::flights
flight s
flights
library(dplyr)
flights
nycflights13::flights
flights <- nycflights13::flights
flights %>% filter(dest=="MCO")
flights %>% filter(dest=="MCO" & origin == "JFK")
weather <- nycflights13::weather
weather
summarize(mean = mean(temp))
weather %>% summarize(mean = mean(temp))
weather %>% summarize(mean(temp))
weather %>% summarize(mean(temp, na.rm =T))
weather %>% summarize(mean = mean(temp, na.rm =T))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n(temp))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n(temp, na.rm=T))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n(temp))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n())
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n(na.rm=T))
weather %>% summarize(mean = mean(temp, na.rm =T), sd = sd(temp, na.rm=T), count = n())
nrow(weather)
weather
weather %>% group_by(month)
weather %>% group_by(month) %>% summarize(mean = mean(temp))
weather %>% group_by(month) %>% summarize(mean = mean(temp), count =n())
airlines <- nycflights13::airlines
airlines
flights
flights %>% inner_join(airlines, by="carrier")
n <- flights %>% inner_join(airlines, by="carrier")
View(n)
glimpse(flights)
glimpse(flights)$year
glimpse(flights)
p <- read.delim("~/Downloads/ms/proteinGroups.txt")
View(p)
glimpse(p)
p %>% select (starts_with("Peptides"))
pp <- p %>% select (starts_with("Peptides"))
View(pp)
pp <- p %>% select (starts_with("Peptides"))
pp <- p %>% select (starts_with("Peptides."))
p %>% top_n(Peptides)
p %>% top_n(n=10,Peptides)
p %>% top_n(n=10,Peptides) %>% select(Peptides)
p %>% top_n(n=5,Peptides) %>% select(Peptides)
library(tidyr)
p %>% pivot_longer(names_to = "type", values_to = "Peptides", cols = starts_with("Peptides."))
p %>% select (starts_with("Peptides."))
head(p %>% select (starts_with("Peptides.")))
p %>% select (c(starts_with("Peptides.")))
p %>% pivot_longer (c(starts_with("Peptides.")))
p %>% pivot_longer (names_to = "type", values_to = "peptides", cols=c(starts_with("Peptides.")))
px <- p %>% pivot_longer (names_to = "type", values_to = "peptides", cols=c(starts_with("Peptides.")))
View(px)
px <- p %>% pivot_longer (names_to = c("type","intensity"), values_to = c("peptides","LFQ"), cols=c(starts_with("Peptides."), starts_with("LFQ.intensity.")))
p %>% select(Gene.names, starts_with("Peptides."), starts_with("LFQ.intensity."))
ps <- p %>% select(Gene.names, starts_with("Peptides."), starts_with("LFQ.intensity."))
View(ps)
ps <- p %>% select(Gene.names, starts_with("Peptides."), starts_with("LFQ.intensity.")) %>% filter (Gene.names != "")
ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "Peptides")
ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "Peptides", cols = c(starts_with("Peptides.")))
ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "Peptides", cols = c(starts_with("Peptides.")), names_repair = "unique")
px <- ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "Peptides", cols = c(starts_with("Peptides.")), names_repair = "unique")
View(px)
px <- ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "number", cols = c(starts_with("Peptides.")), names_repair = "unique")
px <- ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = ".", values_to = "number", cols = c(starts_with("Peptides.")))
px <- ps %>% pivot_longer(names_to = c("Peptides","Sample"), values_to = "number", cols = c(starts_with("Peptides.")))
px <- ps %>% pivot_longer(names_to = c("Peptides","Sample"), names_sep = "\\.", values_to = "number", cols = c(starts_with("Peptides.")))
pxl <- px %>% pivot_longer(names_to = c("LFQ","Sample"), names_sep = "\\.", values_to = "number", cols = c(starts_with("LFQ.")))
pxl <- px %>% pivot_longer(names_to = c("LFQ","Sample"), names_sep = "\\.", values_to = "lfq", cols = c(starts_with("LFQ.")))
pxl <- px %>% pivot_longer(names_to = c("LFQ","Sample"), names_sep = "\\.$", values_to = "lfq", cols = c(starts_with("LFQ.")))
pxl <- px %>% pivot_longer(names_to = c("LFQ","s"), names_sep = "\\.$", values_to = "lfq", cols = c(starts_with("LFQ.")))
View(pxl)
glimpse(p)
pxl <- px %>% pivot_longer(names_to = "variables", values_to = "number", cols = c(starts_with("Peptides."),starts_with("LFQ.")))
px <- p %>% pivot_longer(names_to = "variables", values_to = "number", cols = c(starts_with("Peptides."),starts_with("LFQ.")))
View(px)
pf <- p %>% filter(Gene.names != "")
pfp <- pf %>% select (Gene.names,starts_with("Peptides.")) %>% pivot_longer(names_to = "variable", values_to = "peptide.number", cols = -Gene.names)
View(pfp)
pfl <- pf %>% select (Gene.names,starts_with("LFQ.intensity.")) %>% pivot_longer(names_to = "variable", values_to = "LFQ", cols = -Gene.names)
View(pfl)
pfl %>% separate(variable, into = c("var","sample"), sep = "([^.]+)\\.([^.]+)$")
pfl %>% extract(variable, regexp = "([^.]+)\\.([^.]+)$")
pfl %>% extract(variable, regexp = "([^.]+)\\.([^.]+)$", into="sample")
pfl %>% extract(variable, regexp = "(\\.([^.]+)$", into="sample")
grep ("(\\.([^.]+)$", "LFQ.intensity.Ref7924_07")
grep ("(\\.[^.]+)$", "LFQ.intensity.Ref7924_07")
gsub("(\\.[^.]+)$", "LFQ.intensity.Ref7924_07")
gsub("LFQ.intensity.Ref7924_07","(\\.[^.]+)$")
?gsub
gsub("LFQ.intensity.Ref7924_07","(\\.[^.]+)$")
gsub(x= "LFQ.intensity.Ref7924_07","(\\.[^.]+)$")
gsub(x= "LFQ.intensity.Ref7924_07","(\\.[^.]+)$", replacement = "")
pfl %>% separate(col = variable, into = "sample", sep = "(\\.[^.]+)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "(\\.[^.]+)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "(\\.[^.])$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "(\\.[^.]*)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "(\\.*)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "\\.(*)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "\\.(+)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "\\.([:alnum]+)$")
pfl %>% separate(col = variable, into = c("lfq", "sample"), sep = "\\.")
pfl %>% separate(col = variable, into = c("sample"), sep = "LFQ.intensity.")
pfl %>% separate(col = variable, into = c("sample","lfq"), sep = "LFQ.intensity.")
pfl %>% separate(col = variable, into = c("lfq","sample"), sep = "LFQ.intensity.")
pfp %>% separate(col = variable, into = c("peptides","sample"), sep = "Peptides.")
pn <- pfp %>% separate(col = variable, into = c("peptides","sample"), sep = "Peptides.")
pf <- pfl %>% separate(col = variable, into = c("lfq","sample"), sep = "LFQ.intensity.")
View(pf)
View(pn)
pf %>% inner_join(pn, by= c(Gene.names, sample))
pf %>% inner_join(pn, by= c("Gene.names", "sample"))
pf %>% inner_join(pn, by= c("Gene.names", "sample")) %>% select(-lfq)
pf %>% inner_join(pn, by= c("Gene.names", "sample")) %>% select(-lfq,peptides)
pf %>% inner_join(pn, by= c("Gene.names", "sample")) %>% select(-c(lfq,peptides))
library(readr)
s <- read_delim("Downloads/ms/sample.list.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE, skip = 1)
View(s)
glimpse(s)
colnames(s)[c(2,22)] <- ("sample.name","sample.id")
colnames(s)[c(2,22)] <- c("sample.name","sample.id")
s <- s[c(5:nrow(s)),]
View(pf)
View(p)
View(pfp)
View(pn)
View(pp)
View(ps)
View(px)
View(pxl)
pf %>% inner_join(pn, by= c("Gene.names", "sample")) %>% select(-c(lfq,peptides))
data <- pf %>% inner_join(pn, by= c("Gene.names", "sample")) %>% select(-c(lfq,peptides))
View(data)
data %>% inner_join(s, by = c("sample"="sample.id"))
s
glimpse(s)
library(readr)
s <- read_delim("Downloads/ms/sample.list.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(s)
data %>% inner_join(s, by = c("sample"="sample.id"))
data %>% inner_join(s, by = c("sample"="sample.id"))
ss <- s[,c("sample.name","sample.id","Genotype","Cell type")]
ss
data %>% inner_join(ss, by = c("sample"="sample.id"))
da <- data %>% inner_join(ss, by = c("sample"="sample.id"))
View(da)
da %>% group_by(Genotype)
da %>% group_by(Genotype) %>% summarize(mean.peptide = mean(peptide.number))
da %>% group_by(Genotype, Gene.names) %>% summarize(mean.peptide = mean(peptide.number))
da %>% group_by(Genotype, "Cell type") %>% summarize(mean.peptide = mean(peptide.number))
da %>% group_by(Gene.names, "Cell type") %>% summarize(mean.peptide = mean(peptide.number))
da %>% select(Gene.names =="Atrx") %>% group_by(Gene.names, "Cell type") %>% summarize(mean.peptide = mean(peptide.number))
da %>% select(Gene.names =="Atrx")
da %>% select(Gene.names == "Atrx")
da %>% filter(Gene.names == "Atrx")
da %>% filter(Gene.names =="Atrx") %>% group_by(Gene.names, "Cell type") %>% summarize(mean.peptide = mean(peptide.number))
da %>% filter(Gene.names =="Atrx") %>% group_by(sample.name) %>% summarize(mean.peptide = mean(peptide.number))
da %>% filter(Gene.names =="Atrx") %>% group_by(sample.name) %>% summarize(mean.peptide = mean(peptide.number), mean.lfq=mean(LFQ))
da %>% filter(Gene.names =="Setdb1") %>% group_by(sample.name) %>% summarize(mean.peptide = mean(peptide.number), mean.lfq=mean(LFQ))
f <- readRDS("~/cluster/becgsc_019/analysis/external_Vincendeau_CT_H3K27ac/analysis/summary/Vincendeau.H3K27ac_fc_summary.rds")
f$sample_name
assay(f)
fa <- assay(f)
View(f)
fa <- as.data.frame(assay(f))
View(fa)
fa$h9.ctrl.h3k27ac <- fa$h9.ctrl.h3k27ac/10.9
fa$h9.herv.h3k27ac <- fa$h9.herv.h3k27ac/14.3
library(ggplot2)
qplot(fa$h9.ctrl.h3k27ac, fa$h9.herv.h3k27ac)
qplot(fa$h9.ctrl.h3k27ac, fa$h9.herv.h3k27ac, log="xy")
f <- readRDS("~/cluster/becgsc_019/analysis/external/external_Vincendeau_CT_H3K27ac/analysis/summary/Vincendeau.H3K27ac_fc_summary.rds")
assay(f)
fc <- assay(f)
ls
glimpse(fc)
library(tidyverse)
glimpse(fc)
fc <- as.data.frame(fc)
fc$h9.ctrl.h3k27ac <- fc$h9.ctrl.h3k27ac/10.9
fc$h9.herv.h3k27ac <- fc$h9.herv.h3k27ac/14.4
View(fc)
fc[rownames(fc) == "LTR5"]
fc[rownames(fc) == "LTR5",]
fc[grep("LTR5",rownames(fc)),]
fid <- readRDS("~/cluster/becgsc_019/analysis/external/external_Vincendeau_CT_H3K27ac/analysis/summary/Vincendeau.H3K27ac_fc_id_summary.rds")
fidf <- as.data.frame(assay(fid))
fidf$h9.ctrl.h3k27ac <- fidf$h9.ctrl.h3k27ac/10.9
fidf$h9.herv.h3k27ac <- fidf$h9.herv.h3k27ac/14.4
fifd$ratio <- (fidf$h9.herv.h3k27ac+10)/(fidf$h9.ctrl.h3k27ac+10)
fidf$ratio <- (fidf$h9.herv.h3k27ac+10)/(fidf$h9.ctrl.h3k27ac+10)
View(fidf)
fidf$h9.ctrl.h3k27me3 <- fidf$h9.ctrl.h3k27me3/12.7
summary(fidf)
fidf$ratio <- (fidf$h9.herv.h3k27ac+1)/(fidf$h9.ctrl.h3k27ac+1)
library(shiny); runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
readRDS(file = "cluster/becgsc_001/analysis/Nair.2021/analysis.repeats/summary/Nair.2021.RNA_fc_summary.rds")
s <-readRDS(file = "cluster/becgsc_001/analysis/Nair.2021/analysis.repeats/summary/Nair.2021.RNA_fc_summary.rds")
assay(s)
head(assay(s))
coldata(s)
colData(s)
sample.list <- colData(s)
sample.list <- as.data.frame(colData(s))
View(sample.list)
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
library(shiny); runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
g <-readRDS(file = "cluster/becgsc_001/analysis/Nair.2021/analysis.repeats/summary/Nair.2021.RNA_gene_counts_summary.rds")
View(g)
ga <- assay(g)
ga <- as.data.frame(assay(g))
View(ga)
gs[rownames(gs) == "NTRK3"]
ga[rownames(ga) == "NTRK3",]
sum(ga)
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
library(shiny); runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
library(shiny); runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
x <- readRDS("cluster/becgsc_019/analysis/ef37_CT_H3K9me3_KO56_T253_15M/analysis/summary/CT_H3K9m3_KO56_T253_fc_id_summary.rds")
assay(x)
runApp('cluster/becgsc_001/dev/NGS.analysis/NGS.shiny.app.R')
x <- readRDS("cluster/becgsc_019/analysis/ef38_RNAseq_KO56_T253/analysis_genes/summary/RNAseq_H3K9m3_KO56_T253_sense_gene_counts_summary.rds")
assay(x)
xa <- as.data.frame(assay(x))
sum(xa)
xu <- readRDS("cluster/becgsc_019/analysis/ef38_RNAseq_KO56_T253/analysis_genes/summary/RNAseq_H3K9m3_KO56_T253_unstranded_gene_counts_summary.rds")
xua <- as.data.frame(assay(xu))
sum(xua)
sum(xua[,c(1:ncol(xua))])
sum(xua[,c(2:ncol(xua))])
pep <- "/home/gunnar/cluster/becgsc_019/analysis/ef38_RNAseq_KO56_T253/project/analysis.configuration_genes.yaml"
# Load the project
prj <- invisible(suppressWarnings(pepr::Project(pep)))
# Convenience
project_name    <- config(prj)$name
library(pepr)
library(data.table)
library(reshape2)
library(ggplot2)
library(SummarizedExperiment)
# Load the project
prj <- invisible(suppressWarnings(pepr::Project(pep)))
# Convenience
project_name    <- config(prj)$name
pipeline_mode <- config(prj)$pipeline_mode
project_protocol <- unique(invisible(suppressWarnings(pepr::sampleTable(prj)$protocol)))
project_samples <- pepr::sampleTable(prj)$sample_name
sample_table <- data.table(prj@samples)
# Get project genomes
genomes <- invisible(suppressWarnings(pepr::sampleTable(prj)$genome))
genome <- unique(genomes)
# Set the results subdirectory
if (dir.exists(argv$results)) {
results_subdir <- suppressMessages(file.path(argv$results))
} else {
warning(paste0("The project results subdirectory (", argv$results,
") does not exist."))
quit()
}
################################################################################
#Summarize Gene Counts for RNA-seq data (use column 3 with stranded information)
if (project_protocol == "RNA") {
write(paste0("Creating gene counts summary..."), stdout())
for (sample in project_samples) {
sample_output_folder <- file.path(results_subdir, sample)
sample_gc_file   <- file.path(sample_output_folder, paste("aligned_",genome,sep=""),
paste(sample,".ReadsPerGene.out.tab",sep=""))
t <- fread(sample_gc_file, header=F,
col.names=c('geneID', sample, 'read1', 'read2'), skip = 4)
#unstranded (col 2)
if (exists("unstranded", inherits = F)) {
unstranded <- cbind(unstranded, t[,2])
} else {
unstranded <- t[,c(1,2)]
}
#read1 (col 3)
colnames(t) <- c('geneID', 'unstranded', sample, 'read2')
if (exists("read1", inherits = F)) {
read1 <- cbind(read1, t[,3])
} else {
read1 <- t[,c(1,3)]
}
#read2 (col 4)
colnames(t) <- c('geneID', 'unstranded', 'read1', sample)
if (exists("read2", inherits = F)) {
read2 <- cbind(read2, t[,4])
} else {
read2 <- t[,c(1,4)]
}
}
#estimate sense reads which should have more coverage
if (sum(read1[,c(2:ncol(read1))]) > sum(read2[,c(2:ncol(read2))])) {sense <- read1} else {sense <- read2}
#Summarized Experiment
#unstranded
unstranded_gene_counts_rds <- file.path(summary_dir,
paste0(project_name, '_unstranded_gene_counts_summary.rds'))
gcm <- as.matrix(unstranded[,2:ncol(unstranded)])
rownames(gcm) <- unstranded$geneID
gc.se <- SummarizedExperiment(assays = list(counts=gcm), colData = sample_table)
saveRDS(gc.se, file = unstranded_gene_counts_rds)
#sense reads
sense_gene_counts_rds <- file.path(summary_dir,
paste0(project_name, '_sense_gene_counts_summary.rds'))
gcm <- as.matrix(sense[,2:ncol(sense)])
rownames(gcm) <- sense$geneID
gc.se <- SummarizedExperiment(assays = list(counts=gcm), colData = sample_table)
saveRDS(gc.se, file = sense_gene_counts_rds)
}
write(paste0("Creating gene counts summary..."), stdout())
results_subdir <- "/work/project/becgsc_019/analysis/ef38_RNAseq_KO56_T253/analysis_genes/results_pipeline"
for (sample in project_samples) {
sample_output_folder <- file.path(results_subdir, sample)
sample_gc_file   <- file.path(sample_output_folder, paste("aligned_",genome,sep=""),
paste(sample,".ReadsPerGene.out.tab",sep=""))
t <- fread(sample_gc_file, header=F,
col.names=c('geneID', sample, 'read1', 'read2'), skip = 4)
#unstranded (col 2)
if (exists("unstranded", inherits = F)) {
unstranded <- cbind(unstranded, t[,2])
} else {
unstranded <- t[,c(1,2)]
}
#read1 (col 3)
colnames(t) <- c('geneID', 'unstranded', sample, 'read2')
if (exists("read1", inherits = F)) {
read1 <- cbind(read1, t[,3])
} else {
read1 <- t[,c(1,3)]
}
#read2 (col 4)
colnames(t) <- c('geneID', 'unstranded', 'read1', sample)
if (exists("read2", inherits = F)) {
read2 <- cbind(read2, t[,4])
} else {
read2 <- t[,c(1,4)]
}
}
results_subdir <- "/home/gunnar/cluster/becgsc_019/analysis/ef38_RNAseq_KO56_T253/analysis_genes/results_pipeline"
for (sample in project_samples) {
sample_output_folder <- file.path(results_subdir, sample)
sample_gc_file   <- file.path(sample_output_folder, paste("aligned_",genome,sep=""),
paste(sample,".ReadsPerGene.out.tab",sep=""))
t <- fread(sample_gc_file, header=F,
col.names=c('geneID', sample, 'read1', 'read2'), skip = 4)
#unstranded (col 2)
if (exists("unstranded", inherits = F)) {
unstranded <- cbind(unstranded, t[,2])
} else {
unstranded <- t[,c(1,2)]
}
#read1 (col 3)
colnames(t) <- c('geneID', 'unstranded', sample, 'read2')
if (exists("read1", inherits = F)) {
read1 <- cbind(read1, t[,3])
} else {
read1 <- t[,c(1,3)]
}
#read2 (col 4)
colnames(t) <- c('geneID', 'unstranded', 'read1', sample)
if (exists("read2", inherits = F)) {
read2 <- cbind(read2, t[,4])
} else {
read2 <- t[,c(1,4)]
}
}
for (sample in project_samples) {
sample_output_folder <- file.path(results_subdir, sample)
sample_gc_file   <- file.path(sample_output_folder, paste("aligned_",genome,sep=""),
paste(sample,".ReadsPerGene.out.tab",sep=""))
t <- fread(sample_gc_file, header=F,
col.names=c('geneID', sample, 'read1', 'read2'), skip = 4)
#unstranded (col 2)
if (exists("unstranded", inherits = F)) {
unstranded <- cbind(unstranded, t[,2])
} else {
unstranded <- t[,c(1,2)]
}
#read1 (col 3)
colnames(t) <- c('geneID', 'unstranded', sample, 'read2')
if (exists("read1", inherits = F)) {
read1 <- cbind(read1, t[,3])
} else {
read1 <- t[,c(1,3)]
}
#read2 (col 4)
colnames(t) <- c('geneID', 'unstranded', 'read1', sample)
if (exists("read2", inherits = F)) {
read2 <- cbind(read2, t[,4])
} else {
read2 <- t[,c(1,4)]
}
}
View(read1)
View(read2)
#estimate sense reads which should have more coverage
if (sum(read1[,c(2:ncol(read1))]) > sum(read2[,c(2:ncol(read2))])) {sense <- read1} else {sense <- read2}
View(sense)
sum(read1[,c(2:ncol(read1))])
read1[,c(2:ncol(read1))]
read2[,c(2:ncol(read2))]
read2[,2:4]
sum(read1[,2:ncol(read1)])
sum(read2[,2:ncol(read2)])
setwd("~/cluster/becgsc_001/dev/NGS.analysis")
#input directory to search for sample files
d <- "/home/gunnar/becgsc_016/analysis"
library(reader)
list.files(d, pattern = "sample.list.csv")
list.files(d, pattern = "sample.list.csv", recursive = T)
list.files(d, pattern = "sample_list.csv", recursive = T)
list.files(d, pattern = ".csv", recursive = T)
d
list.files(d, pattern = "*", recursive = T)
list.files(d, recursive = T)
#input directory to search for sample files
d <- "/home/gunnar/cluster/becgsc_016/analysis"
list.files(d, pattern = "sample_list.csv", recursive = T)
list.files(d, pattern = "sample.list.csv", recursive = T)
list.files(d, pattern = "sample*", recursive = T)
list.files(d, pattern = "sample.table.csv", recursive = T)
l <- list.files(d, pattern = "sample.table.csv", recursive = T)
l
length(l)
l[1]
st <- read.csv("~/cluster/becgsc_016/analysis/ChIPseq.factors.heterochromatin/project/sample.table.csv")
View(st)
for (i in 1:length(l))
{
st <- read.csv(paste(d,l[i]),sep="")
}
st <- read.csv(paste(d,l[i]),sep="/")
st <- read.csv(paste(d,as.character(l[i])),sep="/")
st <- read.csv(paste(d,as.character(l[i])),sep="")
d
l[1]
paste(d,l[1])
paste(d,l[1], collapse = "/")
paste(d,l[1], collapse = "")
as.string(l[1])
as.character(l[1])
d
x<-"dadh"
paste(d,x)
paste(d,x, sep="")
l <- as.character(l[1])
l
paste(d,l, sep="")
l <- list.files(d, pattern = "sample.table.csv", recursive = T)
for (i in 1:length(l))
{
st <- read.csv(paste(d,sf,sep="/")
}
for (i in 1:length(l))
{
sf <- as.character(l[i])
st <- read.csv(paste(d,sf,sep="/"))
}
View(st)
dirname(st)
tmp <- as.character(l[i])
sample.file <- paste(d,tmp,sep="/"))
sample.file <- paste(d,tmp,sep="/")
dirname(sample.file)
